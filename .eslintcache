[{"D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\index.js":"1","D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\App.js":"2","D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\reportWebVitals.js":"3","D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\Home.js":"4","D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\Details.js":"5"},{"size":517,"mtime":1607435572855,"results":"6","hashOfConfig":"7"},{"size":699,"mtime":1607435572847,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1607435572869,"results":"9","hashOfConfig":"7"},{"size":2173,"mtime":1607435572850,"results":"10","hashOfConfig":"7"},{"size":7104,"mtime":1607435572849,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1kjxsi7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\index.js",[],["26","27"],"D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\App.js",["28"],"import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Details from \"./Details\";\r\n\r\nfunction App() {\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://geolocation-db.com/json/1a811210-241d-11eb-b7a9-293dae7a95e1\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setDetails(data));\r\n\r\n    console.log(details);\r\n  }, []);\r\n  const [details, setDetails] = React.useState(null);\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/flag\" render={() => <Details details={details} />} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\reportWebVitals.js",[],"D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\Home.js",["29","30"],"import React from \"react\";\r\nimport draw from \"./draw.svg\";\r\nimport logo from \"./logo.png\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <nav\r\n          class=\"navbar navbar-dark \"\r\n          style={{ backgroundColor: \" #0d0e11\" }}\r\n        >\r\n          <a class=\"navbar-brand\" href=\"#\" style={{ marginLeft: \"10px\" }}>\r\n            <img src={logo} width=\"30\" height=\"35\" alt=\"\" />\r\n          </a>\r\n          <p\r\n            style={{\r\n              marginRight: \"auto\",\r\n              marginTop: \"14px\",\r\n              color: \"aliceblue\",\r\n              fontSize: \"18px\",\r\n            }}\r\n          >\r\n            Flag My IP\r\n          </p>\r\n        </nav>\r\n        <header className=\"App-header\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div\r\n                class=\"col\"\r\n                style={{ marginTop: \"auto\", marginBottom: \"auto\" }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    lineHeight: \"35px\",\r\n                    fontSize: \"20px\",\r\n                    marginBottom: \"50px\",\r\n                  }}\r\n                >\r\n                  Flag My IP is an IP lookup website featuring Proxy/VPN\r\n                  detection. Perform fraud checks on online stores, detect\r\n                  malicious players on online games and much more!\r\n                </p>\r\n                <a\r\n                  href=\"/flag\"\r\n                  className=\"details\"\r\n                  style={{ marginLeft: \"-480px\" }}\r\n                >\r\n                  Flag My IP\r\n                </a>\r\n              </div>\r\n              <div class=\"col\">\r\n                <img src={draw} style={{ width: \"600px\" }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <footer class=\"footer fixed-bottom\">\r\n            <div class=\"container\">\r\n              <span class=\"text-muted\" style={{ fontSize: \"18px\" }}>\r\n                A project by Vadhiraja and Shreesha\r\n              </span>\r\n            </div>\r\n          </footer>\r\n        </header>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\7th SEM\\CSDF\\CSDF Assignment\\vpn-detection\\src\\Details.js",["31","32","33","34","35"],"import React from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nconst Details = () => {\r\n  const mapStyles = {\r\n    height: \"400px\",\r\n    width: \"500px\",\r\n  };\r\n\r\n  const [center, setCenter] = React.useState({\r\n    lat: 0,\r\n    lng: 0,\r\n  });\r\n  const [load, setLoading] = React.useState(true);\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    fetch(\r\n      \"https://geolocation-db.com/json/1a811210-241d-11eb-b7a9-293dae7a95e1\"\r\n    )\r\n      .then(function (response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          return Promise.reject(response);\r\n        }\r\n      })\r\n      .then(function (data) {\r\n        setDetails(data);\r\n        console.log(\"Data is\" + data);\r\n        return fetch(\r\n          `http://check.getipintel.net/check.php?ip=${data.IPv4}&contact=anudip7@gmail.com`\r\n        );\r\n      })\r\n      .then(function (userData) {\r\n        console.log(userData);\r\n      })\r\n      .catch(function (error) {\r\n        console.warn(error);\r\n      });\r\n  }, []);\r\n\r\n  const [details, setDetails] = React.useState(null);\r\n  const [bool, setBool] = React.useState(false);\r\n  const [btn, setBtn] = React.useState(\"Flag My IP\");\r\n  const [vpn, setVPN] = React.useState(null);\r\n  const [vstat, setVStat] = React.useState(null);\r\n  const getDetails = async () => {\r\n    fetch(\r\n      \"https://geolocation-db.com/json/1a811210-241d-11eb-b7a9-293dae7a95e1\"\r\n    )\r\n      .then(function (response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          return Promise.reject(response);\r\n        }\r\n      })\r\n      .then(function (data) {\r\n        setDetails(data);\r\n        setCenter((prevState) => ({\r\n          ...prevState,\r\n          lat: data.latitude,\r\n          lng: data.longitude,\r\n        }));\r\n        return fetch(\r\n          `http://check.getipintel.net/check.php?ip=${data.IPv4}&contact=anudip7@gmail.com`\r\n        );\r\n      })\r\n      .then(function (response) {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          return Promise.reject(response);\r\n        }\r\n      })\r\n      .then(function (userData) {\r\n        setVPN(userData);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.warn(error);\r\n      });\r\n\r\n    console.log(details);\r\n    setBool(!bool);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-dark \" style={{ backgroundColor: \" #0d0e11\" }}>\r\n        <a class=\"navbar-brand\" href=\"/\" style={{ marginLeft: \"10px\" }}>\r\n          <img src={logo} width=\"30\" height=\"35\" alt=\"\" />\r\n        </a>\r\n        <p\r\n          style={{\r\n            marginRight: \"auto\",\r\n            marginTop: \"14px\",\r\n            color: \"aliceblue\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Flag My IP\r\n        </p>\r\n      </nav>\r\n      <header className=\"App-headerx\" style={{}}>\r\n        {bool && (\r\n          <div style={{ display: bool ? \"block\" : \"none\" }}>\r\n            <table class=\"table table-dark table-borderless\">\r\n              <tbody>\r\n                <tr>\r\n                  <th style={{ width: \"30px\" }}>IP Address</th>\r\n                  <td>{details.IPv4}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>City</th>\r\n                  <td>\r\n                    {details.city == null && \"-\"}\r\n                    {details.city != null && details.city}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>ZIP Code</th>\r\n                  <td>\r\n                    {details.postal == null && \"-\"}\r\n                    {details.postal != null && details.postal}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>State</th>\r\n                  <td>\r\n                    {details.state == null && \"-\"}\r\n                    {details.state != null && details.state}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Country</th>\r\n                  <td>{details.country_name}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Latitude</th>\r\n                  <td>{details.latitude}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Longitude</th>\r\n                  <td>{details.longitude}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>VPN Status</th>\r\n                  <td>\r\n                    {!load && vpn < 1 && (\r\n                      <p style={{ color: \"#13e000\" }}>VPN Not Used</p>\r\n                    )}\r\n                    {!load && vpn == 1 && (\r\n                      <p style={{ color: \"#ff4343\" }}>VPN Used</p>\r\n                    )}\r\n                    {load && (\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"sr-only\"></span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <div style={{ marginBottom: \"50px\" }}>\r\n              <LoadScript googleMapsApiKey=\"AIzaSyB4YpdxXTygqk5C3gBWUwjEumWBmkjTX0Y\">\r\n                <GoogleMap\r\n                  mapContainerStyle={mapStyles}\r\n                  zoom={13}\r\n                  center={center}\r\n                >\r\n                  <Marker position={center} />\r\n                </GoogleMap>\r\n              </LoadScript>\r\n            </div>\r\n            {/*<p style={{ textAlign: \"left\" }}>\r\n              Your IP is : {details.IPv4}\r\n              <br />\r\n              City : {details.city}\r\n              <br />\r\n              Country : {details.country_name}\r\n              <br />\r\n              Latitude : {details.latitude}\r\n              <br />\r\n              Longitude : {details.longitude}\r\n              <br />\r\n              VPN Status : {vstat}\r\n            </p>\r\n        */}\r\n          </div>\r\n        )}\r\n        <div class=\"container\">\r\n          {!bool && (\r\n            <div>\r\n              <h4>\r\n                I understand that this website collects my IP address and it's\r\n                related attributes. Are you sure you want to continue?\r\n              </h4>\r\n              <div style={{ marginTop: \"30px\" }}>\r\n                <button className=\"yn\" onClick={() => getDetails()}>\r\n                  Yes\r\n                </button>\r\n                <button\r\n                  className=\"ynx\"\r\n                  onClick={() => {\r\n                    history.goBack();\r\n                  }}\r\n                  style={{ marginLeft: \"40PX\" }}\r\n                >\r\n                  No\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </header>\r\n      <footer class=\"footer \">\r\n        <div class=\"container\">\r\n          <span class=\"text-muted\" style={{ fontSize: \"18px\" }}>\r\n            A project by Vadhiraja and Shreesha\r\n          </span>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":16,"column":6,"nodeType":"42","endLine":16,"endColumn":8,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":13,"column":11,"nodeType":"46","endLine":13,"endColumn":75},{"ruleId":"47","severity":1,"message":"48","line":55,"column":17,"nodeType":"46","endLine":55,"endColumn":62},{"ruleId":"49","severity":1,"message":"50","line":46,"column":10,"nodeType":"51","messageId":"52","endLine":46,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":46,"column":15,"nodeType":"51","messageId":"52","endLine":46,"endColumn":21},{"ruleId":"49","severity":1,"message":"54","line":48,"column":10,"nodeType":"51","messageId":"52","endLine":48,"endColumn":15},{"ruleId":"49","severity":1,"message":"55","line":48,"column":17,"nodeType":"51","messageId":"52","endLine":48,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":155,"column":35,"nodeType":"58","messageId":"59","endLine":155,"endColumn":37},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'details'. Either include it or remove the dependency array.","ArrayExpression",["62"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'btn' is assigned a value but never used.","Identifier","unusedVar","'setBtn' is assigned a value but never used.","'vstat' is assigned a value but never used.","'setVStat' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [details]",{"range":"65","text":"66"},[433,435],"[details]"]